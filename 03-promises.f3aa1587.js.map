{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,UAAWH,SAASC,cAAc,iBAClCG,eAAgBJ,SAASC,cAAc,oBAgCzC,SAASI,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEF,E,MAAUJ,IAEpBO,EAAO,C,SAAEH,E,MAAUJ,GAAQ,GAE5BA,EAAM,G,CAtCbJ,EAAKC,KAAKe,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAIC,iBACJ,IAAMd,MAAAe,EAAKd,UAAEA,EAASC,eAAEA,GAkBjB,CACLF,MAAOgB,OAAOpB,EAAKI,MAAMiB,OACzBhB,UAAWe,OAAOpB,EAAKK,UAAUgB,OACjCf,eAAgBc,OAAOpB,EAAKM,eAAee,QApB7C,IAAK,IAAIC,EAAI,EAAGA,GAAKhB,EAAgBgB,GAAK,EACxCf,EAAce,EAAGH,GACdI,MAAK,EAACf,SAAEA,EAAQJ,MAAEA,MACjBoB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBlB,QAAiBJ,MAAU,IAGnDuB,OAAM,EAACnB,SAAEA,EAAQJ,MAAEA,MAClBoB,EAAA1B,GAAS2B,OAAOG,QACd,sBAAoBpB,QAAeJ,MAAU,IAGnDe,GAASd,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  delayStep: document.querySelector('[name=\"step\"]'),\n  amountPromises: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  let { delay, delayStep, amountPromises } = valueForm();\n  for (let i = 1; i <= amountPromises; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += delayStep;\n  }\n}\n\nfunction valueForm() {\n  return {\n    delay: Number(refs.delay.value),\n    delayStep: Number(refs.delayStep.value),\n    amountPromises: Number(refs.amountPromises.value),\n  };\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","delayStep","amountPromises","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","delay1","Number","value","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.f3aa1587.js.map"}